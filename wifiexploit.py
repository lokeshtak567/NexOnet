# IMPORTING REQUIRED MODULES :
import subprocess
import random
import requests
import time


# Basic Configurations :

session=requests.session()

headers = {
    "User-Agent": random.choice([
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36"
    ]),
    "Referer": "http://172.16.35.1:8090/",
    "Accept-Language": "en-US,en;q=0.9",
    "Connection": "keep-alive"
}

working_Id=["R32560","R32530","R43000","R43217","R42579","R42575","R42789","R51544","R32530","R32510"]
user="event"
pwd="Event@123"
# REQUIRED FUNCTIONS  :


            


    

def connect_wifi_network():
    global connected
    connected=False
    flag=False
    for net_1 in networks:
        for i in range(3):
            try:
                command = f'netsh wlan connect name="{net_1[0]}"'
                run_command = subprocess.run(command, shell=True, capture_output=True, text=True)
                result=run_command.stdout.lower()
                if "completed successfully" in result:
                    flag=True
                    break
                elif "no profile" in result:
                    break
                time.sleep(2)
            except Exception as e:
                continue
        if flag == True : 
            try:
                time.sleep(3)
                response = session.get("http://172.16.35.1:8090", headers=headers, timeout=5)
                if response.status_code==200 : 
                    connected = True
                    break
            except Exception as e:
                disconnect_other_wifi()
        
        
    if flag == False and connected == False :
        print("No network connected.")
        file.write("No network connected.\n")
    elif flag == True and connected == False :
        print("No College network connected.")
        file.write(("No College network connected.\n"))    


def login(user,pwd):
    global logged_in,USER,PASSWD
    logged_in=False
    LOGIN_URL  =  "http://172.16.35.1:8090/login.xml"
    login_payload = {"mode":"191","username":"event","password":"Event@123", "a":"1743598790580","producttype":"0"}
    for i in range(3):
        try:
            time.sleep(3)
            response=session.post(LOGIN_URL,data=login_payload, timeout=3)
            if response.status_code==200 and "signed in" in response.text :
                logged_in=True
                break
        except Exception as e:
            print(e)
            file.write(f"{e}\n")
            continue

def check_internet():
    global internet
    internet=False
    try:
        time.sleep(3)
        response=session.get("https://www.google.com",timeout=3)
        if response.status_code==200 :
            print("Chill...Its working")
            file.write("Chill...Its working\n")
            internet=True
            
    except Exception as e:
        None


   
def logout(user):
    global logged_out
    logged_out= False
    LOGOUT_URL = "http://172.16.35.1:8090/logout.xml"
    logout_payload = {"mode":"193","username":"event","a":"1743598790580","producttype":"0"}
    for i in range(3):
        try:
            time.sleep(3)
            response=session.post(LOGOUT_URL,data=logout_payload, timeout=3)
            if response.status_code==200 and "signed out" in response.text :
                logged_out=True
                break
        except Exception as e:
            print(e)
            file.write(f"{e}\n")
            continue
    
while True :

    print("connecting to network...")
    
    connect_wifi_network()

    if connected :
        print("Logging In...")
        
        login(user,pwd)

        if logged_in :
            while True:
                check_internet()
                if internet==True:
                    time.sleep(12)
                    continue

                else:
                    logout(user)
                    if logged_out==True:
                        while True:
                            global RID
                            RID=random.choice(working_Id)
                            user=RID
                            pwd=RID
                            login(user,pwd)
                            
                            if logged_in==True:
                                break
                    else:
                        break


                













